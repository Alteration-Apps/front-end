{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/brayhandeaza/Documents/dev/Alteration/front-end/src/components/Settings.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Icons, Img } from \"../constants/Image\";\nimport { connect } from \"react-redux\";\n\nvar Settings = function (_Component) {\n  _inherits(Settings, _Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _super.call(this, props);\n\n    _this.handleTitleOnPress = function _callee(e, view) {\n      var _this$state$InputEdit, fName, lName, age;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state$InputEdit = _this.state.InputEditable, fName = _this$state$InputEdit.fName, lName = _this$state$InputEdit.lName, age = _this$state$InputEdit.age;\n              _context.t0 = view;\n              _context.next = _context.t0 === \"isFirstName\" ? 4 : _context.t0 === \"isLastName\" ? 6 : _context.t0 === \"isAge\" ? 8 : 10;\n              break;\n\n            case 4:\n              _this.setState({\n                InputEditable: {\n                  fName: true,\n                  lName: lName,\n                  age: age\n                },\n                inputColor: \"rgba(0, 128, 0, 0.637)\"\n              });\n\n              return _context.abrupt(\"break\", 10);\n\n            case 6:\n              _this.setState({\n                InputEditable: {\n                  fName: fName,\n                  lName: true,\n                  age: age\n                },\n                inputColor: \"rgba(0, 128, 0, 0.637)\"\n              });\n\n              return _context.abrupt(\"break\", 10);\n\n            case 8:\n              _this.setState({\n                InputEditable: {\n                  fName: fName,\n                  lName: lName,\n                  age: true\n                },\n                inputColor: \"rgba(0, 128, 0, 0.637)\"\n              });\n\n              return _context.abrupt(\"break\", 10);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleFistNameOnChange = function (values) {\n      var fName = _this.state.InputEditable.fName;\n\n      _this.setState({\n        isUpdate: false,\n        inputValue: {\n          fName: values,\n          lName: _this.state.inputValue.lName,\n          age: _this.state.inputValue.age\n        },\n        inputColor: values == \"\" ? \"rgba(255, 0, 0, 0.671)\" : fName ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000,0.3)\"\n      });\n    };\n\n    _this.handleLastNameOnChange = function (values) {\n      var lName = _this.state.InputEditable.lName;\n\n      _this.setState({\n        isUpdate: false,\n        inputValue: {\n          fName: _this.state.inputValue.fName,\n          lName: values,\n          age: _this.state.inputValue.age\n        },\n        inputColor: values == \"\" ? \"rgba(255, 0, 0, 0.671)\" : lName ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000,0.3)\"\n      });\n    };\n\n    _this.handleAgeNameOnChange = function (values) {\n      var age = _this.state.InputEditable.age;\n\n      _this.setState({\n        isUpdate: false,\n        inputValue: {\n          fName: _this.state.inputValue.fName,\n          lName: _this.state.inputValue.lName,\n          age: values\n        },\n        inputColor: values == \"\" ? \"rgba(255, 0, 0, 0.671)\" : age ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000,0.3)\"\n      });\n    };\n\n    _this.handleUpdateOnPress = function () {\n      _this.setState({\n        isUpdate: true,\n        isInputEditable: true,\n        InputEditable: {\n          fName: false,\n          lName: false,\n          age: false\n        }\n      });\n    };\n\n    _this.state = {\n      title: [\"First Name\", \"Last Name\", \"Age\"],\n      isFirstName: false,\n      isLastName: false,\n      isAge: false,\n      inputValue: {\n        fName: \"First Name\",\n        lName: \"Last Name\",\n        age: \"Age\"\n      },\n      isUpdate: false,\n      InputEditable: {\n        fName: false,\n        lName: false,\n        age: false\n      },\n      inputColor: \"rgba(000,000,000,0.3)\"\n    };\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.Settings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.SettingsHeaderContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: [styles.SettingsHeaderContainerImgBox],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: [styles.SettingsHeaderContainerGift],\n        source: Icons.Gift,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: [styles.SettingsHeaderContainerImgBox, {\n          width: 200,\n          backgroundColor: \"white\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.SettingsHeaderText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, \"Hello, Brayhan\")), React.createElement(View, {\n        style: [styles.SettingsHeaderContainerImgBox, {\n          backgroundColor: \"white\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.SettingsPictureContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.SettingsPictureImgBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: styles.SettingsPicture,\n        source: Img.Avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: styles.Form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: [styles.ProfileTitlesBox, {\n          borderColor: this.state.inputColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.InputBox,\n        onPress: function onPress() {\n          return true;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        editable: this.state.InputEditable.fName,\n        style: [styles.Input, {\n          color: this.state.InputEditable.fName ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000, 0.6)\"\n        }],\n        value: this.state.inputValue.fName,\n        onChangeText: function onChangeText(value) {\n          return _this2.handleFistNameOnChange(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      })), React.createElement(TouchableHighlight, {\n        underlayColor: \"white\",\n        onPress: function onPress(e) {\n          return _this2.handleTitleOnPress(e, \"isFirstName\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 30,\n          height: 30\n        },\n        source: Icons.Edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }\n      }))), React.createElement(View, {\n        style: [styles.ProfileTitlesBox, {\n          borderColor: this.state.InputEditable.lName ? \"green\" : \"rgba(000,000,000,0.3)\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.InputBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        editable: this.state.InputEditable.fName,\n        style: [styles.Input, {\n          color: this.state.InputEditable.lName ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000, 0.6)\"\n        }],\n        value: this.state.inputValue.lName,\n        onChangeText: function onChangeText(value) {\n          return _this2.handleLastNameOnChange(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      })), React.createElement(TouchableHighlight, {\n        underlayColor: \"white\",\n        onPress: function onPress(e) {\n          return _this2.handleTitleOnPress(e, \"isLastName\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 30,\n          height: 30\n        },\n        source: Icons.Edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      }))), React.createElement(View, {\n        style: [styles.ProfileTitlesBox, {\n          borderColor: this.state.InputEditable.age ? \"green\" : \"rgba(000,000,000,0.3)\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.InputBox,\n        onPress: function onPress() {\n          return true;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        editable: this.state.InputEditable.fName,\n        style: [styles.Input, {\n          color: this.state.InputEditable.age ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000, 0.6)\"\n        }],\n        value: this.state.inputValue.age,\n        onChangeText: function onChangeText(value) {\n          return _this2.handleAgeNameOnChange(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      })), React.createElement(TouchableHighlight, {\n        underlayColor: \"white\",\n        onPress: function onPress(e) {\n          return _this2.handleTitleOnPress(e, \"isAge\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 30,\n          height: 30\n        },\n        source: Icons.Edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }\n      })))), React.createElement(TouchableHighlight, {\n        style: styles.Touchable,\n        underlayColor: \"#f6f6f6\",\n        onPress: function onPress(res) {\n          return _this2.handleUpdateOnPress(\"_Alretation\", \"isAlteration\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.IconsOptionText, {\n          color: \"rgb(112,112,112)\",\n          fontSize: 25,\n          fontWeight: \"600\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, \"Update\")), React.createElement(Text, {\n        style: {\n          color: \"green\",\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, this.state.isUpdate ? \"Succefully updated\" : ''));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nvar styles = StyleSheet.create({\n  Settings: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\"\n  },\n  SettingsHeaderContainer: {\n    width: \"100%\",\n    height: 110,\n    paddingBottom: 10,\n    paddingLeft: 20,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\"\n  },\n  SettingsHeaderContainerImgBox: {\n    width: 40,\n    height: 40,\n    backgroundColor: \"#e4d9d5\",\n    borderRadius: 50,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  SettingsHeaderContainerGift: {\n    width: 20,\n    height: 20\n  },\n  SettingsHeaderText: {\n    fontSize: 24,\n    fontWeight: \"600\"\n  },\n  SettingsPictureContainer: {\n    width: \"100%\",\n    height: 170,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  SettingsPicture: {\n    width: 130,\n    height: 130,\n    borderRadius: 100,\n    borderWidth: 5,\n    borderColor: \"rgba(000,000,000,0.3)\"\n  },\n  SettingsHeaderText: {\n    fontSize: 18,\n    color: \"rgba(000,000,000, 0.6)\",\n    fontWeight: \"600\"\n  },\n  Form: {\n    width: \"90%\",\n    marginTop: 30,\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  Input: {\n    width: \"100%\",\n    height: 50,\n    fontSize: 18,\n    fontWeight: \"600\",\n    marginBottom: 15\n  },\n  InputBox: {\n    width: \"90%\",\n    height: 75,\n    paddingTop: 15,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  ProfileHeaderText: {\n    fontSize: 18,\n    color: \"rgba(000,000,000, 0.6)\",\n    fontWeight: \"600\"\n  },\n  ProfileTitlesBox: {\n    width: \"100%\",\n    height: 75,\n    borderBottomWidth: 0.6,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  Touchable: {\n    width: 300,\n    height: 60,\n    borderRadius: 10,\n    marginTop: 50,\n    marginBottom: 20,\n    backgroundColor: \"white\",\n    borderWidth: 0.5,\n    borderColor: \"rgba(112,112,112,0.3)\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.15,\n    shadowRadius: 3.84,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  ItemsImage: {\n    width: 200,\n    height: 200,\n    marginBottom: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.15,\n    shadowRadius: 3.84\n  },\n  ItemsOption: {\n    width: \"100%\",\n    height: 70,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  IconsOptionText: {\n    paddingBottom: 5\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps)(Settings);","map":{"version":3,"sources":["/Users/brayhandeaza/Documents/dev/Alteration/front-end/src/components/Settings.jsx"],"names":["React","Component","Icons","Img","connect","Settings","props","handleTitleOnPress","e","view","state","InputEditable","fName","lName","age","setState","inputColor","handleFistNameOnChange","values","isUpdate","inputValue","handleLastNameOnChange","handleAgeNameOnChange","handleUpdateOnPress","isInputEditable","title","isFirstName","isLastName","isAge","styles","SettingsHeaderContainer","SettingsHeaderContainerImgBox","SettingsHeaderContainerGift","Gift","width","backgroundColor","SettingsHeaderText","SettingsPictureContainer","SettingsPictureImgBox","SettingsPicture","Avatar","Form","ProfileTitlesBox","borderColor","InputBox","Input","color","value","height","Edit","Touchable","res","IconsOptionText","fontSize","fontWeight","StyleSheet","create","display","justifyContent","alignItems","paddingBottom","paddingLeft","flexDirection","borderRadius","borderWidth","marginTop","paddingRight","marginBottom","paddingTop","ProfileHeaderText","borderBottomWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","ItemsImage","ItemsOption","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, Text, View, Image, TextInput, TouchableHighlight, ScrollView, Dimensions } from 'react-native'\nimport { Icons, Img } from '../constants/Image'\n\n// redux\nimport { connect } from \"react-redux\"\n\n\nclass Settings extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: [\"First Name\", \"Last Name\", \"Age\"],\n            isFirstName: false,\n            isLastName: false,\n            isAge: false,\n            inputValue: {\n                fName: \"First Name\",\n                lName: \"Last Name\",\n                age: \"Age\",\n            },\n            isUpdate: false,\n            InputEditable: {\n                fName: false,\n                lName: false,\n                age: false\n            },\n            inputColor: \"rgba(000,000,000,0.3)\",\n        }\n    }\n\n    handleTitleOnPress = async (e, view) => {\n        const { fName, lName, age } = this.state.InputEditable\n        switch (view) {\n            case \"isFirstName\":\n                this.setState({\n                    InputEditable: {\n                        fName: true,\n                        lName,\n                        age\n                    },\n                    inputColor: \"rgba(0, 128, 0, 0.637)\",\n                })\n                break;\n            case \"isLastName\":\n                this.setState({\n                    InputEditable: {\n                        fName,\n                        lName: true,\n                        age\n                    },\n                    inputColor: \"rgba(0, 128, 0, 0.637)\"\n                })\n\n                break;\n            case \"isAge\":\n                this.setState({\n                    InputEditable: {\n                        fName,\n                        lName,\n                        age: true\n                    },\n                    inputColor: \"rgba(0, 128, 0, 0.637)\"\n                })\n                break;\n        }\n    }\n\n    handleFistNameOnChange = (values) => {\n        const { fName } = this.state.InputEditable\n        this.setState({\n            isUpdate: false,\n            inputValue: {\n                fName: values,\n                lName: this.state.inputValue.lName,\n                age: this.state.inputValue.age\n            },\n            inputColor: values == \"\" ? \"rgba(255, 0, 0, 0.671)\" : fName ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000,0.3)\"\n        })\n    }\n    handleLastNameOnChange = (values) => {\n        const { lName } = this.state.InputEditable\n        this.setState({\n            isUpdate: false,\n            inputValue: {\n                fName: this.state.inputValue.fName,\n                lName: values,\n                age: this.state.inputValue.age\n            },\n            inputColor: values == \"\" ? \"rgba(255, 0, 0, 0.671)\" : lName ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000,0.3)\"\n        })\n    }\n    handleAgeNameOnChange = (values) => {\n        const { age } = this.state.InputEditable\n        this.setState({\n            isUpdate: false,\n            inputValue: {\n                fName: this.state.inputValue.fName,\n                lName: this.state.inputValue.lName,\n                age: values\n            },\n            inputColor: values == \"\" ? \"rgba(255, 0, 0, 0.671)\" : age ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000,0.3)\"\n        })\n    }\n\n    handleUpdateOnPress = () => {\n        this.setState({\n            isUpdate: true,\n            isInputEditable: true,\n            InputEditable: {\n                fName: false,\n                lName: false,\n                age: false\n            }\n        })\n    }\n\n    render() {\n\n        return (\n            <View style={styles.Settings}>\n                <View style={styles.SettingsHeaderContainer}>\n                    <View style={[styles.SettingsHeaderContainerImgBox]}>\n                        <Image style={[styles.SettingsHeaderContainerGift]} source={Icons.Gift} />\n                    </View>\n                    <View style={[styles.SettingsHeaderContainerImgBox, { width: 200, backgroundColor: \"white\" }]}>\n                        <Text style={styles.SettingsHeaderText}>Hello, Brayhan</Text>\n                    </View>\n                    <View style={[styles.SettingsHeaderContainerImgBox, { backgroundColor: \"white\" }]}></View>\n                </View>\n                <View style={styles.SettingsPictureContainer}>\n                    <View style={styles.SettingsPictureImgBox}>\n                        <Image style={styles.SettingsPicture} source={Img.Avatar} />\n                    </View>\n                </View>\n                <View style={styles.Form}>\n                    <View style={[styles.ProfileTitlesBox, { borderColor: this.state.inputColor }]}>\n                        <TouchableHighlight style={styles.InputBox} onPress={() => true}>\n                            <TextInput editable={this.state.InputEditable.fName} style={[styles.Input, { color: this.state.InputEditable.fName ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000, 0.6)\" }]} value={this.state.inputValue.fName} onChangeText={(value) => this.handleFistNameOnChange(value)} />\n                        </TouchableHighlight>\n                        <TouchableHighlight underlayColor=\"white\" onPress={(e) => this.handleTitleOnPress(e, \"isFirstName\")}>\n                            <Image style={{ width: 30, height: 30 }} source={Icons.Edit} />\n                        </TouchableHighlight>\n                    </View>\n                    <View style={[styles.ProfileTitlesBox, { borderColor: this.state.InputEditable.lName ? \"green\" : \"rgba(000,000,000,0.3)\" }]}>\n                        <TouchableHighlight style={styles.InputBox}>\n                            <TextInput editable={this.state.InputEditable.fName} style={[styles.Input, { color: this.state.InputEditable.lName ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000, 0.6)\" }]} value={this.state.inputValue.lName} onChangeText={(value) => this.handleLastNameOnChange(value)} />\n                        </TouchableHighlight>\n                        <TouchableHighlight underlayColor=\"white\" onPress={(e) => this.handleTitleOnPress(e, \"isLastName\")}>\n                            <Image style={{ width: 30, height: 30 }} source={Icons.Edit} />\n                        </TouchableHighlight>\n                    </View>\n                    <View style={[styles.ProfileTitlesBox, { borderColor: this.state.InputEditable.age ? \"green\" : \"rgba(000,000,000,0.3)\" }]}>\n                        <TouchableHighlight style={styles.InputBox} onPress={() => true}>\n                            <TextInput editable={this.state.InputEditable.fName} style={[styles.Input, { color: this.state.InputEditable.age ? \"rgba(0, 128, 0, 0.637)\" : \"rgba(000,000,000, 0.6)\" }]} value={this.state.inputValue.age} onChangeText={(value) => this.handleAgeNameOnChange(value)} />\n                        </TouchableHighlight>\n                        <TouchableHighlight underlayColor=\"white\" onPress={(e) => this.handleTitleOnPress(e, \"isAge\")}>\n                            <Image style={{ width: 30, height: 30 }} source={Icons.Edit} />\n                        </TouchableHighlight>\n                    </View>\n                </View>\n                <TouchableHighlight style={styles.Touchable} underlayColor=\"#f6f6f6\" onPress={(res) => this.handleUpdateOnPress(\"_Alretation\", \"isAlteration\")}>\n                    <Text style={[styles.IconsOptionText, { color: \"rgb(112,112,112)\", fontSize: 25, fontWeight: \"600\" }]}>{\"Update\"}</Text>\n                </TouchableHighlight>\n                <Text style={{ color: \"green\", fontSize: 15 }}>{this.state.isUpdate ? \"Succefully updated\" : ''}</Text>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    Settings: {\n        width: \"100%\",\n        height: \"100%\",\n\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\"\n    },\n    SettingsHeaderContainer: {\n        width: \"100%\",\n        height: 110,\n        paddingBottom: 10,\n        paddingLeft: 20,\n\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-end\"\n    },\n    SettingsHeaderContainerImgBox: {\n        width: 40,\n        height: 40,\n        backgroundColor: \"#e4d9d5\",\n        borderRadius: 50,\n\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n\n    },\n    SettingsHeaderContainerGift: {\n        width: 20,\n        height: 20,\n    },\n    SettingsHeaderText: {\n        fontSize: 24,\n        fontWeight: \"600\"\n    },\n    SettingsPictureContainer: {\n        width: \"100%\",\n        height: 170,\n\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    SettingsPicture: {\n        width: 130,\n        height: 130,\n        borderRadius: 100,\n        borderWidth: 5,\n        borderColor: \"rgba(000,000,000,0.3)\"\n    },\n    SettingsHeaderText: {\n        fontSize: 18,\n        color: \"rgba(000,000,000, 0.6)\",\n        fontWeight: \"600\"\n    },\n    Form: {\n        width: \"90%\",\n        // height: 200,\n        marginTop: 30,\n        paddingLeft: 20,\n        paddingRight: 20,\n        // backgroundColor: \"red\",\n    },\n    Input: {\n        width: \"100%\",\n        height: 50,\n        fontSize: 18,\n        fontWeight: \"600\",\n\n\n        marginBottom: 15\n    },\n    InputBox: {\n        width: \"90%\",\n        height: 75,\n        paddingTop: 15,\n\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n\n    },\n    ProfileHeaderText: {\n        fontSize: 18,\n        color: \"rgba(000,000,000, 0.6)\",\n        fontWeight: \"600\"\n    },\n    ProfileTitlesBox: {\n        width: \"100%\",\n        height: 75,\n        borderBottomWidth: 0.6,\n\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n    Touchable: {\n        width: 300,\n        height: 60,\n        borderRadius: 10,\n        marginTop: 50,\n        marginBottom: 20,\n        backgroundColor: \"white\",\n        borderWidth: 0.5,\n        borderColor: \"rgba(112,112,112,0.3)\",\n\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.15,\n        shadowRadius: 3.84,\n\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    ItemsImage: {\n        width: 200,\n        height: 200,\n        marginBottom: 10,\n\n\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.15,\n        shadowRadius: 3.84,\n\n    },\n    ItemsOption: {\n        width: \"100%\",\n        height: 70,\n\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    IconsOptionText: {\n        paddingBottom: 5\n\n    },\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        state\n    }\n}\n\nexport default connect(mapStateToProps)(Settings)"]},"metadata":{},"sourceType":"module"}