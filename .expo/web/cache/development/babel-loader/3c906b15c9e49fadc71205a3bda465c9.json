{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/brayhandeaza/Documents/dev/Alteration/front-end/src/Views/Settings.View.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Icons, Img } from \"../constants/Image\";\nimport { connect } from \"react-redux\";\nimport Settings from \"../components/Settings\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar SettingsView = function (_Component) {\n  _inherits(SettingsView, _Component);\n\n  var _super = _createSuper(SettingsView);\n\n  function SettingsView(props) {\n    var _this;\n\n    _classCallCheck(this, SettingsView);\n\n    _this = _super.call(this, props);\n\n    _this.handleTitleOnPress = function _callee(e, view) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (view == \"isFirstName\") {\n                _this.setState({\n                  isFistName: !_this.state.isFistName\n                });\n\n                alert(!_this.state.isFirstName);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleInputOnChange = function (values) {\n      _this.setState({\n        inputValue: values\n      });\n    };\n\n    _this.handleUpdateOnPress = function () {\n      alert(\"Pressed\");\n    };\n\n    _this.state = {\n      title: [\"First Name\", \"Last Name\", \"Age\"],\n      isFirstName: false,\n      isLastName: false,\n      isAge: false,\n      inputValue: \"First Name\"\n    };\n    return _this;\n  }\n\n  _createClass(SettingsView, [{\n    key: \"render\",\n    value: function render() {\n      return height < 670 ? React.createElement(ScrollView, {\n        contentContainerStyle: styles.Scroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, React.createElement(Settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      })) : React.createElement(Settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return SettingsView;\n}(Component);\n\nvar styles = StyleSheet.create({\n  Scroll: {\n    paddingBottom: 120\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps)(SettingsView);","map":{"version":3,"sources":["/Users/brayhandeaza/Documents/dev/Alteration/front-end/src/Views/Settings.View.jsx"],"names":["React","Component","Icons","Img","connect","Settings","Dimensions","get","width","height","SettingsView","props","handleTitleOnPress","e","view","setState","isFistName","state","alert","isFirstName","handleInputOnChange","values","inputValue","handleUpdateOnPress","title","isLastName","isAge","styles","Scroll","StyleSheet","create","paddingBottom","mapStateToProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAEA,SAASC,KAAT,EAAgBC,GAAhB;AAGA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;IAETC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAWnBC,kBAXmB,GAWE,iBAAOC,CAAP,EAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AACjB,kBAAIA,IAAI,IAAI,aAAZ,EAA2B;AACvB,sBAAKC,QAAL,CAAc;AACVC,kBAAAA,UAAU,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADd,iBAAd;;AAGAE,gBAAAA,KAAK,CAAC,CAAC,MAAKD,KAAL,CAAWE,WAAb,CAAL;AACH;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXF;;AAAA,UAoBnBC,mBApBmB,GAoBG,UAACC,MAAD,EAAY;AAC9B,YAAKN,QAAL,CAAc;AACVO,QAAAA,UAAU,EAAED;AADF,OAAd;AAGH,KAxBkB;;AAAA,UA0BnBE,mBA1BmB,GA0BG,YAAM;AACxBL,MAAAA,KAAK,CAAC,SAAD,CAAL;AACH,KA5BkB;;AAEf,UAAKD,KAAL,GAAa;AACTO,MAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,WAAf,EAA4B,KAA5B,CADE;AAETL,MAAAA,WAAW,EAAE,KAFJ;AAGTM,MAAAA,UAAU,EAAE,KAHH;AAITC,MAAAA,KAAK,EAAE,KAJE;AAKTJ,MAAAA,UAAU,EAAE;AALH,KAAb;AAFe;AASlB;;;;6BAoBQ;AAGL,aAAQb,MAAM,GAAG,GAAT,GACJ,oBAAC,UAAD;AAAY,QAAA,qBAAqB,EAAEkB,MAAM,CAACC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADI,GAIJ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAMH;;;;EAvCsB3B,S;;AA0C3B,IAAM0B,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,MAAM,EAAE;AACJG,IAAAA,aAAa,EAAE;AADX;AADqB,CAAlB,CAAf;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACf,KAAD,EAAW;AAC/B,SAAO;AACHA,IAAAA,KAAK,EAALA;AADG,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAAC4B,eAAD,CAAP,CAAyBtB,YAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, Text, View, Image, TextInput, TouchableHighlight, ScrollView, Dimensions } from 'react-native'\nimport { Icons, Img } from '../constants/Image'\n\n// redux\nimport { connect } from \"react-redux\"\n\nimport Settings from \"../components/Settings\"\n\nconst { width, height } = Dimensions.get(\"screen\")\n\nclass SettingsView extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: [\"First Name\", \"Last Name\", \"Age\"],\n            isFirstName: false,\n            isLastName: false,\n            isAge: false,\n            inputValue: \"First Name\"\n        }\n    }\n\n    handleTitleOnPress = async (e, view) => {\n        if (view == \"isFirstName\") {\n            this.setState({\n                isFistName: !this.state.isFistName,\n            })\n            alert(!this.state.isFirstName)\n        }\n    }\n\n    handleInputOnChange = (values) => {\n        this.setState({\n            inputValue: values\n        })\n    }\n\n    handleUpdateOnPress = () => {\n        alert(\"Pressed\")\n    }\n    render() {\n       \n\n        return (height < 670 ?\n            <ScrollView contentContainerStyle={styles.Scroll} >\n                <Settings />\n            </ScrollView> :\n            <Settings />\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    Scroll: {\n        paddingBottom: 120\n    }\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        state\n    }\n}\n\nexport default connect(mapStateToProps)(SettingsView)"]},"metadata":{},"sourceType":"module"}