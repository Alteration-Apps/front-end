{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/brayhandeaza/Documents/dev/Alteration/front-end/src/Views/Alretation.View.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Calendar } from \"react-native-calendars\";\nimport Textarea from 'react-native-textarea';\nimport { Button } from \"native-base\";\nimport { connect } from \"react-redux\";\nimport { color } from 'react-native-reanimated';\n\nvar Alretation = function (_Component) {\n  _inherits(Alretation, _Component);\n\n  var _super = _createSuper(Alretation);\n\n  function Alretation(props) {\n    var _this;\n\n    _classCallCheck(this, Alretation);\n\n    _this = _super.call(this, props);\n\n    _this.handleDayOnPress = function (e) {\n      _this.setState({\n        activeDay: e.dateString\n      });\n    };\n\n    _this.handleMinDate = function () {\n      var date = new Date();\n      var tempMonth = date.getMonth();\n      var tempDay = date.getDate();\n      var month = tempMonth < 9 ? \"0\" + (tempMonth + 1) : tempMonth;\n      var day = tempDay < 9 ? \"0\" + (tempDay + 1) : tempDay + 1;\n      var year = date.getFullYear();\n      return year + \"-\" + month + \"-\" + day;\n    };\n\n    _this.state = {\n      activeDay: _this.handleMinDate()\n    };\n    return _this;\n  }\n\n  _createClass(Alretation, [{\n    key: \"render\",\n    value: function render() {\n      var _ref;\n\n      var activeDay = this.state.activeDay;\n      return React.createElement(View, {\n        style: styles.Alretation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 4\n        }\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: styles.Scroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }\n      }, React.createElement(Calendar, {\n        minDate: this.handleMinDate(),\n        onDayPress: this.handleDayOnPress,\n        markedDates: (_ref = {}, _defineProperty(_ref, activeDay, {\n          dotColor: 'white',\n          disabled: false,\n          selected: true,\n          marked: true,\n          selectedColor: '#b2897b',\n          disableTouchEvent: false\n        }), _defineProperty(_ref, \"2020-08-19\", {\n          dotColor: 'white',\n          disabled: true,\n          selected: false,\n          marked: false,\n          selectedColor: '#b2897b',\n          disableTouchEvent: true\n        }), _ref),\n        theme: {\n          arrowColor: '#b2897b',\n          dotColor: \"white\",\n          calendarBackground: \"white\",\n          textSectionTitleColor: \"black\"\n        },\n        disableAllTouchEventsForDisabledDays: true,\n        current: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }\n      }), React.createElement(View, {\n        style: styles.FormView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: styles.FormText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, \"Full Name\"), React.createElement(TextInput, {\n        style: styles.FormInput,\n        placeholder: \"Full Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: styles.FormText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, \"Phone Number\"), React.createElement(TextInput, {\n        style: styles.FormInput,\n        placeholder: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: styles.FormText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, \"Full Address\"), React.createElement(TextInput, {\n        style: styles.FormInput,\n        placeholder: \"Full Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: styles.FormText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, \"Detals\"), React.createElement(Textarea, {\n        containerStyle: styles.textareaContainer,\n        style: styles.textarea,\n        maxLength: 120,\n        placeholder: 'Details of what will be altered...',\n        placeholderTextColor: '#c7c7c7',\n        underlineColorAndroid: 'transparent',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }), React.createElement(Button, {\n        style: styles.Button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 8\n        }\n      }, \"Make An Appointment\")))));\n    }\n  }]);\n\n  return Alretation;\n}(Component);\n\nvar styles = StyleSheet.create({\n  Alretation: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  TitleView: {\n    width: \"100%\",\n    height: 60,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  Title: {\n    fontSize: 25,\n    color: \"#636363\"\n  },\n  Scroll: {\n    paddingTop: 20,\n    paddingBottom: 360\n  },\n  FormView: {\n    width: \"100%\",\n    height: \"100%\",\n    marginTop: 30,\n    paddingTop: 20,\n    paddingLeft: 25,\n    paddingRight: 25\n  },\n  FormText: {\n    fontSize: 20,\n    paddingBottom: 10\n  },\n  FormInput: {\n    width: \"100%\",\n    height: 50,\n    paddingLeft: 10,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"rgba(000,000,000,0.2)\",\n    marginBottom: 10\n  },\n  textareaContainer: {\n    height: 180,\n    padding: 5,\n    borderWidth: 1,\n    borderColor: \"rgba(000,000,000,0.2)\"\n  },\n  textarea: {\n    textAlignVertical: 'top',\n    height: 170,\n    fontSize: 14,\n    color: '#333'\n  },\n  Button: {\n    width: \"100%\",\n    height: 50,\n    backgroundColor: \"#b2897b\",\n    marginTop: 20,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps)(Alretation);","map":{"version":3,"sources":["/Users/brayhandeaza/Documents/dev/Alteration/front-end/src/Views/Alretation.View.jsx"],"names":["React","Component","Calendar","Textarea","Button","connect","color","Alretation","props","handleDayOnPress","e","setState","activeDay","dateString","handleMinDate","date","Date","tempMonth","getMonth","tempDay","getDate","month","day","year","getFullYear","state","styles","Scroll","dotColor","disabled","selected","marked","selectedColor","disableTouchEvent","arrowColor","calendarBackground","textSectionTitleColor","FormView","FormText","FormInput","textareaContainer","textarea","fontSize","StyleSheet","create","flex","backgroundColor","TitleView","width","height","display","justifyContent","alignItems","Title","paddingTop","paddingBottom","marginTop","paddingLeft","paddingRight","borderRadius","borderWidth","borderColor","marginBottom","padding","textAlignVertical","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, View, Text, ScrollView, TextInput} from 'react-native'\nimport { Calendar } from \"react-native-calendars\"\nimport Textarea from 'react-native-textarea'\nimport { Button } from \"native-base\"\n\nimport { connect } from \"react-redux\"\nimport { color } from 'react-native-reanimated'\n\nclass Alretation extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveDay: this.handleMinDate()\n\t\t}\n\t}\n\n\thandleDayOnPress = (e) => {\n\t\tthis.setState({\n\t\t\tactiveDay: e.dateString\n\t\t})\n\t}\n\n\thandleMinDate = () => {\n\t\tlet date = new Date()\n\t\tlet tempMonth = date.getMonth()\n\t\tlet tempDay = date.getDate()\n\n\t\tlet month = tempMonth < 9 ? (\"0\" + (tempMonth + 1)) : tempMonth\n\t\tlet day = tempDay < 9 ? (\"0\" + (tempDay + 1)) : tempDay + 1\n\t\tlet year = date.getFullYear()\n\n\t\treturn year + \"-\" + month + \"-\" + day\n\t}\n\n\t\n\trender() {\n\t\tconst { activeDay } = this.state\n\t\treturn (\n\t\t\t<View style={styles.Alretation}>\n\t\t\t\t<ScrollView contentContainerStyle={styles.Scroll}>\n\t\t\t\t\t<Calendar\n\t\t\t\t\t\tminDate={this.handleMinDate()}\n\t\t\t\t\t\tonDayPress={this.handleDayOnPress}\n\t\t\t\t\t\tmarkedDates={{\n\t\t\t\t\t\t\t[activeDay]: { dotColor: 'white', disabled: false, selected: true, marked: true, selectedColor: '#b2897b', disableTouchEvent: false },\n\t\t\t\t\t\t\t\"2020-08-19\": { dotColor: 'white', disabled: true, selected: false, marked: false, selectedColor: '#b2897b', disableTouchEvent: true },\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\tarrowColor: '#b2897b',\n\t\t\t\t\t\t\tdotColor: \"white\",\n\t\t\t\t\t\t\tcalendarBackground: \"white\",\n\t\t\t\t\t\t\ttextSectionTitleColor: \"black\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisableAllTouchEventsForDisabledDays={true}\n\t\t\t\t\t\tcurrent={null}\n\t\t\t\t\t/>\n\t\t\t\t\t<View style={styles.FormView}>\n\t\t\t\t\t\t<Text style={styles.FormText}>Full Name</Text>\n\t\t\t\t\t\t<TextInput style={styles.FormInput} placeholder=\"Full Name\" />\n\t\t\t\t\t\t<Text style={styles.FormText}>Phone Number</Text>\n\t\t\t\t\t\t<TextInput style={styles.FormInput} placeholder=\"Phone Number\" />\n\t\t\t\t\t\t<Text style={styles.FormText}>Full Address</Text>\n\t\t\t\t\t\t<TextInput style={styles.FormInput} placeholder=\"Full Address\" />\n\t\t\t\t\t\t<Text style={styles.FormText}>Detals</Text>\n\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\tcontainerStyle={styles.textareaContainer}\n\t\t\t\t\t\t\tstyle={styles.textarea}\n\t\t\t\t\t\t\tmaxLength={120}\n\t\t\t\t\t\t\tplaceholder={'Details of what will be altered...'}\n\t\t\t\t\t\t\tplaceholderTextColor={'#c7c7c7'}\n\t\t\t\t\t\t\tunderlineColorAndroid={'transparent'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button style={styles.Button}>\n\t\t\t\t\t\t\t<Text style={{color: \"white\", fontSize: 20}}>Make An Appointment</Text>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</View>\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tAlretation: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"white\",\n\n\t},\n\tTitleView: {\n\t\twidth: \"100%\",\n\t\theight: 60,\n\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\"\n\t},\n\tTitle: {\n\t\tfontSize: 25,\n\t\tcolor: \"#636363\"\n\t},\n\tScroll: {\n\t\tpaddingTop: 20,\n\t\tpaddingBottom: 360\n\t},\n\tFormView: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\tmarginTop: 30,\n\t\tpaddingTop: 20,\n\t\tpaddingLeft: 25,\n\t\tpaddingRight: 25,\n\t},\n\tFormText: {\n\t\tfontSize: 20,\n\t\tpaddingBottom: 10\n\t},\n\tFormInput: {\n\t\twidth: \"100%\",\n\t\theight: 50,\n\t\tpaddingLeft: 10,\n\t\tborderRadius: 10,\n\t\tborderWidth: 1,\n\t\tborderColor: \"rgba(000,000,000,0.2)\",\n\t\tmarginBottom: 10\n\t},\n\ttextareaContainer: {\n\t\theight: 180,\n\t\tpadding: 5,\n\t\tborderWidth: 1,\n\t\tborderColor: \"rgba(000,000,000,0.2)\"\n\t},\n\ttextarea: {\n\t\ttextAlignVertical: 'top', \n\t\theight: 170,\n\t\tfontSize: 14,\n\t\tcolor: '#333',\n\t},\n\tButton: {\n\t\twidth: \"100%\",\n\t\theight: 50,\n\t\tbackgroundColor: \"#b2897b\",\n\t\tmarginTop: 20,\n\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\"\n\t}\n})\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tstate\n\t}\n}\nexport default connect(mapStateToProps)(Alretation)"]},"metadata":{},"sourceType":"module"}